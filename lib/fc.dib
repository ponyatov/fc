#!meta

{"kernelInfo":{"defaultKernelName":"fsharp","items":[{"aliases":[],"name":"csharp"},{"aliases":[],"languageName":"fsharp","name":"fsharp"}]}}

#!fsharp

type expr =
    | Int of int
    | Var of string
    | Op  of string * expr * expr

#!fsharp

let i123  = Int 123
let add12 = Op("+", Int 1, Int 2)

#!fsharp

let env: (string*int) list = [("pi",3); ("zero",0)]

#!fsharp

let rec lookup (env: (string * int) list) (name: string): int =
    match env with
    | [] -> failwith name
    | (k,v)::r -> if k = name then v else lookup r name
    | _ -> failwith "undef"
lookup env "pi"

#!fsharp

let rec eval (e: expr) (env: (string*int) list): int =
    match e with
    | Int i -> i
    | Op("+", e1, e2) -> eval e1 env + eval e2 env
    | Op("*", e1, e2) -> eval e1 env * eval e2 env
    | Var v -> lookup env v
    | _ -> failwith ""

#!fsharp

eval i123 env, eval add12 env, eval (Var "zero") env
